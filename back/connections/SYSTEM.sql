create user phucnguyen IDENTIFIED by MyPassword1;
grant DB_DEVELOPER_ROLE to phucnguyen;
select * from SESSION_PRIVS order by 1;

BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Role (
         role_ID         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         role_name       VARCHAR2(50) NOT NULL,
         role_description VARCHAR2(255)
      )
   ';
END;
/
SELECT * FROM Role;
INSERT INTO Role (role_name, role_description) VALUES ('Admin', 'Administrator with full privileges');
INSERT INTO Role (role_name, role_description) VALUES ('User', 'Regular user with standard privileges');
INSERT INTO Role (role_name, role_description) VALUES ('Guest', 'Guest user with limited access');


BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Login (
         login_ID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         user_login_name VARCHAR2(50) NOT NULL UNIQUE,
         user_password   VARCHAR2(255) NOT NULL
      )
   ';
END;
/
SELECT * FROM Login;


BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE site_User (
         User_ID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         email_address  VARCHAR2(100) UNIQUE NOT NULL,
         phone_number   VARCHAR2(15) UNIQUE,
         password       VARCHAR2(255) NOT NULL,
         login_ID       NUMBER NOT NULL,
         role_ID        NUMBER NOT NULL,
         CONSTRAINT fk_login_ID FOREIGN KEY (login_ID) REFERENCES Login(login_ID),
         CONSTRAINT fk_role_ID FOREIGN KEY (role_ID) REFERENCES Role(role_ID)
      )
   ';
END;
/
SELECT * FROM site_User;

BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Address (
         address_ID      NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         unit_number     VARCHAR2(20),
         street_number   VARCHAR2(20),
         address_line1   VARCHAR2(255) NOT NULL,
         city            VARCHAR2(100) NOT NULL,
         address_line2   VARCHAR2(255),
         region          VARCHAR2(100),
         postal_code     VARCHAR2(20),
         country_ID      NUMBER NOT NULL,
         CONSTRAINT fk_country_ID FOREIGN KEY (country_ID) REFERENCES Country(country_ID)
      )
   ';
END;
/
select * from Address;
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Country (
         country_ID     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         country_name   VARCHAR2(100) UNIQUE NOT NULL
      )
   ';
END;
/
INSERT INTO Country (country_name) VALUES ('United States');
INSERT INTO Country (country_name) VALUES ('Canada');
INSERT INTO Country (country_name) VALUES ('Vietnam');
INSERT INTO Country (country_name) VALUES ('Australia');
INSERT INTO Country (country_name) VALUES ('United Kingdom');
select * from Country;
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE user_address (
         User_ID     NUMBER NOT NULL,
         Address_ID  NUMBER NOT NULL,
         is_default  CHAR(1) CHECK (is_default IN (''Y'', ''N'')),
         CONSTRAINT pk_user_address PRIMARY KEY (User_ID, Address_ID),
         CONSTRAINT fk_user_address_user FOREIGN KEY (User_ID) REFERENCES site_User(User_ID),
         CONSTRAINT fk_user_address_address FOREIGN KEY (Address_ID) REFERENCES Address(address_ID)
      )
   ';
END;
/
SELECT * FROM Role;

INSERT INTO site_User (email_address, phone_number, password, login_ID, role_ID)
VALUES ('john.doe@example.com', '+1234567890', 'encrypted_password1', 1, 1);

INSERT INTO site_User (email_address, phone_number, password, login_ID, role_ID)
VALUES ('jane.smith@example.com', '+0987654321', 'encrypted_password2', 2, 2);

INSERT INTO site_User (email_address, phone_number, password, login_ID, role_ID)
VALUES ('david.brown@example.com', '+1122334455', 'encrypted_password3', 3, 3);


BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE User_Payment_Method (
         User_Payment_Method_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         account_number         VARCHAR2(50) NOT NULL,
         expiry_date            DATE NOT NULL,
         is_default             CHAR(1) CHECK (is_default IN (''Y'', ''N'')),
         provider               VARCHAR2(50),
         User_ID                NUMBER NOT NULL,
         payment_type_ID        NUMBER NOT NULL,
         CONSTRAINT fk_user_ID FOREIGN KEY (User_ID) REFERENCES site_User(User_ID),
         CONSTRAINT fk_payment_type_ID FOREIGN KEY (payment_type_ID) REFERENCES Payment_Type(payment_type_ID)
      )
   ';
END;
/
select * from User_Payment_Method;

BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Payment_Type (
         payment_type_ID  NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         value            VARCHAR2(50) NOT NULL
      )
   ';
END;
/

BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Shipping_Method (
         shipping_method_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         name               VARCHAR2(100) NOT NULL,
         price              NUMBER(10, 2) NOT NULL
      )
   ';
END;
/
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Order_Status (
         order_status_ID  NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         status           VARCHAR2(50) NOT NULL
      )
   ';
END;
/
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Shop_Order (
         shop_order_ID      NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         order_total        NUMBER(10, 2) NOT NULL,
         order_date         DATE NOT NULL,
         shipping_method_ID NUMBER NOT NULL,
         order_status_ID    NUMBER NOT NULL,
         address_ID         NUMBER NOT NULL,
         CONSTRAINT fk_shipping_method_ID FOREIGN KEY (shipping_method_ID) REFERENCES Shipping_Method(shipping_method_ID),
         CONSTRAINT fk_order_status_ID FOREIGN KEY (order_status_ID) REFERENCES Order_Status(order_status_ID),
         CONSTRAINT fk_address_ID FOREIGN KEY (address_ID) REFERENCES Address(address_ID)
      )
   ';
END;
/
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Product_Category (
         product_category_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         category_name       VARCHAR2(100) NOT NULL
      )
   ';
END;
/
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Product (
         product_ID          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         name                VARCHAR2(100) NOT NULL,
         product_image       VARCHAR2(255),
         description         VARCHAR2(255),
         product_category_ID NUMBER NOT NULL,
         CONSTRAINT fk_product_category_ID FOREIGN KEY (product_category_ID) REFERENCES Product_Category(product_category_ID)
      )
   ';
END;
/
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Product_Item (
         product_item_ID     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         SKU                 VARCHAR2(50) UNIQUE NOT NULL,
         quantity_in_stock   NUMBER NOT NULL,
         product_image       VARCHAR2(255),
         price               NUMBER(10, 2) NOT NULL,
         product_ID          NUMBER NOT NULL,
         CONSTRAINT fk_product_ID FOREIGN KEY (product_ID) REFERENCES Product(product_ID)
      )
   ';
END;
/
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Shopping_Cart (
         shopping_cart_ID  NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         User_ID           NUMBER NOT NULL,
         CONSTRAINT fk_shopping_cart_user_ID FOREIGN KEY (User_ID) REFERENCES site_User(User_ID)
      )
   ';
END;
/

BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Shopping_Cart_Item (
         shopping_cart_item_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         quantity              NUMBER NOT NULL,
         shopping_cart_ID      NUMBER NOT NULL,
         product_item_ID       NUMBER NOT NULL,
         CONSTRAINT fk_shopping_cart_ID FOREIGN KEY (shopping_cart_ID) REFERENCES Shopping_Cart(shopping_cart_ID),
         CONSTRAINT fk_product_item_ID FOREIGN KEY (product_item_ID) REFERENCES Product_Item(product_item_ID)
      )
   ';
END;
/
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Promotion (
         promotion_ID    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         name            VARCHAR2(100) NOT NULL,
         description     VARCHAR2(255),
         discount_rate   NUMBER(5, 2),
         start_date      DATE NOT NULL,
         end_date        DATE NOT NULL
      )
   ';
END;
/
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Order_Line (
         order_line_ID   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         quantity        NUMBER NOT NULL,
         price           NUMBER(10, 2) NOT NULL,
         shop_order_ID   NUMBER NOT NULL,
         product_item_ID NUMBER NOT NULL,
         CONSTRAINT fk_order_line_shop_order_ID FOREIGN KEY (shop_order_ID) REFERENCES Shop_Order(shop_order_ID),
         CONSTRAINT fk_order_line_product_item_ID FOREIGN KEY (product_item_ID) REFERENCES Product_Item(product_item_ID)
      )
   ';
END;
/
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE User_Review (
         User_review_ID  NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         rating_value    NUMBER(1) CHECK (rating_value BETWEEN 1 AND 5),
         review_comment         VARCHAR2(500),
         User_ID         NUMBER NOT NULL,
         order_line_ID   NUMBER NOT NULL,
         CONSTRAINT fk_user_review_user_ID FOREIGN KEY (User_ID) REFERENCES site_User(User_ID),
         CONSTRAINT fk_user_review_order_line_ID FOREIGN KEY (order_line_ID) REFERENCES Order_Line(order_line_ID)
      )
   ';
END;
/

BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Variation_Option (
         variation_option_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         value               VARCHAR2(100) NOT NULL,
         variation_ID        NUMBER NOT NULL,
         CONSTRAINT fk_variation_option_variation_ID FOREIGN KEY (variation_ID) REFERENCES Variation(variation_ID)
      )
   ';
END;
/
BEGIN
   EXECUTE IMMEDIATE '
      CREATE TABLE Variation (
         variation_ID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         name                VARCHAR2(100) NOT NULL,
         product_category_ID NUMBER NOT NULL,
         CONSTRAINT fk_variation_product_category_ID FOREIGN KEY (product_category_ID) REFERENCES Product_Category(product_category_ID)
      )
   ';
END;
/


